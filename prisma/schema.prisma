// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  MODERATOR
  MEMBER
}

enum ChannelCategory {
  TEXT
  VOICE
  VIDEO
}

model User {
  id          String   @id @default(cuid())
  clerkUserId String   @unique
  name        String
  email       String
  imageUrl    String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  userRole    UserRole @default(MEMBER)
  member      Member[]
}

model Server {
  id         String    @id @default(uuid())
  name       String
  imageUrl   String?
  inviteCode String?   @unique
  isDefault  Boolean   @default(false)
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  member     Member[]
  channel    Channel[]
}

model Channel {
  id              String          @id @default(cuid())
  name            String
  channelCategory ChannelCategory @default(TEXT)
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt
  serverId        String
  server          Server          @relation(fields: [serverId], references: [id], onDelete: Cascade)
}

model Member {
  id       String @id @default(cuid())
  userId   String
  serverId String
  user     User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  server   Server @relation(fields: [serverId], references: [id], onDelete: Cascade)

  @@unique([userId, serverId])
}
